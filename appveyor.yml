environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
    PIP_CACHE_DIR: "C:\\pip-cache"

  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.

    - PYTHON: "C:\\Python27.10"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "32"
      TOX_ENV: "py27"
      

    - PYTHON: "C:\\Python27.10-x64"
      PYTHON_VERSION: "2.7.10"
      PYTHON_ARCH: "64"
      TOX_ENV: "py27"
      
    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"
      TOX_ENV: "py27"
      
    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"
      TOX_ENV: "py27"

    - PYTHON: "C:\\Python33"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "32"
      TOX_ENV: "py33"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x" # currently 3.3.5
      PYTHON_ARCH: "64"
      TOX_ENV: "py33"

    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "32"
      TOX_ENV: "py34"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"
      TOX_ENV: "py34"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.5.0
      PYTHON_ARCH: "32"
      TOX_ENV: "py35"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.5.0
      PYTHON_ARCH: "64"
      TOX_ENV: "py35"

install:
  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  - ECHO "Updating Environment"
  - "%CMD_IN_ENV% python -m pip install -U pip"
  - "%CMD_IN_ENV% python -m pip install -U setuptools"
  - "%CMD_IN_ENV% python -m pip install -U wheel"
  - "%CMD_IN_ENV% python -m pip install -U tox"
  - "%CMD_IN_ENV% python -m pip install -U virtualenv"

  # Check that we have the expected version and architecture for Python
  - "python -c \"import sys, os;sys.stdout.write(str(sys.version) + os.linesep)\""
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # pre-install Cython
  - "%CMD_IN_ENV% python -m pip install -U cython"

  - ECHO "List Environemnt"
  - "python -m pip list"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - "%CMD_IN_ENV% python -m tox -e %TOX_ENV%"
  
after_test:
  # If tests are successful, create a whl package for the project.
  - "%CMD_IN_ENV% python setup.py bdist_wheel"
  - ps: "ls dist"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

cache:
  - C:\pip-cache
  